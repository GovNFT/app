// vite.config.ts
import { defineConfig } from "file:///Users/gugurelalexandru/Sites/govnft/node_modules/vite/dist/node/index.js";
import react from "file:///Users/gugurelalexandru/Sites/govnft/node_modules/@vitejs/plugin-react/dist/index.mjs";
import getGitInfo from "file:///Users/gugurelalexandru/Sites/govnft/node_modules/git-repo-info/index.js";
import mdx from "file:///Users/gugurelalexandru/Sites/govnft/node_modules/@mdx-js/rollup/index.js";

// package.json
var version = "0.0.0beta";

// vite.config.ts
var info = getGitInfo(process.cwd());
var vite_config_default = defineConfig({
  plugins: [
    react(),
    mdx({
      providerImportSource: "@mdx-js/react"
    })
  ],
  build: {
    sourcemap: false
  },
  define: {
    __APP_VERSION__: JSON.stringify(`v${version}+${info.sha.substring(0, 6)}`)
  },
  resolve: {
    alias: {
      process: "process/browser",
      util: "util"
    }
  }
});
export {
  vite_config_default as default
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsidml0ZS5jb25maWcudHMiLCAicGFja2FnZS5qc29uIl0sCiAgInNvdXJjZXNDb250ZW50IjogWyJjb25zdCBfX3ZpdGVfaW5qZWN0ZWRfb3JpZ2luYWxfZGlybmFtZSA9IFwiL1VzZXJzL2d1Z3VyZWxhbGV4YW5kcnUvU2l0ZXMvZ292bmZ0XCI7Y29uc3QgX192aXRlX2luamVjdGVkX29yaWdpbmFsX2ZpbGVuYW1lID0gXCIvVXNlcnMvZ3VndXJlbGFsZXhhbmRydS9TaXRlcy9nb3ZuZnQvdml0ZS5jb25maWcudHNcIjtjb25zdCBfX3ZpdGVfaW5qZWN0ZWRfb3JpZ2luYWxfaW1wb3J0X21ldGFfdXJsID0gXCJmaWxlOi8vL1VzZXJzL2d1Z3VyZWxhbGV4YW5kcnUvU2l0ZXMvZ292bmZ0L3ZpdGUuY29uZmlnLnRzXCI7aW1wb3J0IHsgZGVmaW5lQ29uZmlnIH0gZnJvbSBcInZpdGVcIjtcbmltcG9ydCByZWFjdCBmcm9tIFwiQHZpdGVqcy9wbHVnaW4tcmVhY3RcIjtcbmltcG9ydCBsZWdhY3kgZnJvbSBcIkB2aXRlanMvcGx1Z2luLWxlZ2FjeVwiO1xuaW1wb3J0IGdldEdpdEluZm8gZnJvbSBcImdpdC1yZXBvLWluZm9cIjtcbmltcG9ydCBtZHggZnJvbSBcIkBtZHgtanMvcm9sbHVwXCI7XG5cbmltcG9ydCB7IHZlcnNpb24gfSBmcm9tIFwiLi9wYWNrYWdlLmpzb25cIjtcblxuY29uc3QgaW5mbyA9IGdldEdpdEluZm8ocHJvY2Vzcy5jd2QoKSk7XG5cbi8vIGh0dHBzOi8vdml0ZWpzLmRldi9jb25maWcvXG5leHBvcnQgZGVmYXVsdCBkZWZpbmVDb25maWcoe1xuICBwbHVnaW5zOiBbXG4gICAgcmVhY3QoKSxcbiAgICBtZHgoe1xuICAgICAgcHJvdmlkZXJJbXBvcnRTb3VyY2U6IFwiQG1keC1qcy9yZWFjdFwiLFxuICAgIH0pLFxuICBdLFxuICBidWlsZDoge1xuICAgIHNvdXJjZW1hcDogZmFsc2UsXG4gIH0sXG4gIGRlZmluZToge1xuICAgIF9fQVBQX1ZFUlNJT05fXzogSlNPTi5zdHJpbmdpZnkoYHYke3ZlcnNpb259KyR7aW5mby5zaGEuc3Vic3RyaW5nKDAsIDYpfWApLFxuICB9LFxuICByZXNvbHZlOiB7XG4gICAgYWxpYXM6IHtcbiAgICAgIHByb2Nlc3M6IFwicHJvY2Vzcy9icm93c2VyXCIsXG4gICAgICB1dGlsOiBcInV0aWxcIixcbiAgICB9LFxuICB9LFxufSk7XG4iLCAie1xuICBcIm5hbWVcIjogXCJnb3ZuZnRcIixcbiAgXCJwcml2YXRlXCI6IHRydWUsXG4gIFwidmVyc2lvblwiOiBcIjAuMC4wYmV0YVwiLFxuICBcInR5cGVcIjogXCJtb2R1bGVcIixcbiAgXCJzY3JpcHRzXCI6IHtcbiAgICBcImRldlwiOiBcInZpdGVcIixcbiAgICBcImJ1aWxkXCI6IFwieWFybiBydW4gY29kZWdlbiAmJiB0c2MgJiYgYmlvbWUgY2hlY2sgLi9zcmMgJiYgdml0ZSBidWlsZFwiLFxuICAgIFwicHJldmlld1wiOiBcInZpdGUgcHJldmlld1wiLFxuICAgIFwibGludFwiOiBcImJpb21lIGNoZWNrIC4vc3JjXCIsXG4gICAgXCJjb2RlZ2VuXCI6IFwieWFybiB3YWdtaSBnZW5lcmF0ZVwiXG4gIH0sXG4gIFwiZGVwZW5kZW5jaWVzXCI6IHtcbiAgICBcIkB0YW5zdGFjay9yZWFjdC1xdWVyeVwiOiBcIl41LjE3LjE1XCIsXG4gICAgXCJidWZmZXJcIjogXCJeNi4wLjNcIixcbiAgICBcImNoYXJ0LmpzXCI6IFwiXjQuNC4xXCIsXG4gICAgXCJkYXlqc1wiOiBcIl4xLjExLjlcIixcbiAgICBcImV2ZW50c1wiOiBcIl4zLjMuMFwiLFxuICAgIFwiZmxvd2JpdGUtcmVhY3RcIjogXCIwLjYuMFwiLFxuICAgIFwibG9kYXNoXCI6IFwiKlwiLFxuICAgIFwibHVjaWRlLXJlYWN0XCI6IFwiXjAuMjc2LjBcIixcbiAgICBcInByb2Nlc3NcIjogXCJeMC4xMS4xMFwiLFxuICAgIFwicmVhY3RcIjogXCJeMTguMi4wXCIsXG4gICAgXCJyZWFjdC1jaGFydGpzLTJcIjogXCJeNS4yLjBcIixcbiAgICBcInJlYWN0LWRvbVwiOiBcIl4xOC4yLjBcIixcbiAgICBcInJlYWN0LWVycm9yLWJvdW5kYXJ5XCI6IFwiXjQuMC4xMVwiLFxuICAgIFwicmVhY3QtZ29vZ2xlLWNoYXJ0c1wiOiBcIl40LjAuMVwiLFxuICAgIFwicmVhY3QtaG90LXRvYXN0XCI6IFwiXjIuNC4xXCIsXG4gICAgXCJyZWFjdC1pbWFnZVwiOiBcIl40LjEuMFwiLFxuICAgIFwicmVhY3Qtc3ZnbXRcIjogXCJeMi4wLjJcIixcbiAgICBcInVzZS1sb2NhbC1zdG9yYWdlLXN0YXRlXCI6IFwiXjE5LjAuNFwiLFxuICAgIFwidXRpbFwiOiBcIl4wLjEyLjVcIixcbiAgICBcInZpZW1cIjogXCIyLnhcIixcbiAgICBcIndhZ21pXCI6IFwiXjIuMi4xXCIsXG4gICAgXCJ3b3V0ZXJcIjogXCJeMi4xMS4wXCJcbiAgfSxcbiAgXCJkZXZEZXBlbmRlbmNpZXNcIjoge1xuICAgIFwiQGJpb21lanMvYmlvbWVcIjogXCIxLjUuM1wiLFxuICAgIFwiQG1keC1qcy9yZWFjdFwiOiBcIl4yLjMuMFwiLFxuICAgIFwiQG1keC1qcy9yb2xsdXBcIjogXCJeMi4zLjBcIixcbiAgICBcIkB0eXBlcy9yZWFjdFwiOiBcIl4xOC4yLjIxXCIsXG4gICAgXCJAdHlwZXMvcmVhY3QtZG9tXCI6IFwiXjE4LjIuN1wiLFxuICAgIFwiQHZpdGVqcy9wbHVnaW4tcmVhY3RcIjogXCJeNC4wLjRcIixcbiAgICBcIkB3YWdtaS9jbGlcIjogXCJeMlwiLFxuICAgIFwiYXV0b3ByZWZpeGVyXCI6IFwiXjEwLjQuMTVcIixcbiAgICBcImZsb3diaXRlXCI6IFwiMS44LjFcIixcbiAgICBcImdpdC1yZXBvLWluZm9cIjogXCJeMi4xLjFcIixcbiAgICBcInBvc3Rjc3NcIjogXCJeOC40LjI5XCIsXG4gICAgXCJwcm9wLXR5cGVzXCI6IFwiXjE1LjguMVwiLFxuICAgIFwidGFpbHdpbmRjc3NcIjogXCJeMy4zLjNcIixcbiAgICBcInRlcnNlclwiOiBcIl41LjE5LjRcIixcbiAgICBcInR5cGVzY3JpcHRcIjogXCJeNS4yLjJcIixcbiAgICBcInZpdGVcIjogXCJeNC40LjlcIlxuICB9XG59XG4iXSwKICAibWFwcGluZ3MiOiAiO0FBQThSLFNBQVMsb0JBQW9CO0FBQzNULE9BQU8sV0FBVztBQUVsQixPQUFPLGdCQUFnQjtBQUN2QixPQUFPLFNBQVM7OztBQ0RkLGNBQVc7OztBREtiLElBQU0sT0FBTyxXQUFXLFFBQVEsSUFBSSxDQUFDO0FBR3JDLElBQU8sc0JBQVEsYUFBYTtBQUFBLEVBQzFCLFNBQVM7QUFBQSxJQUNQLE1BQU07QUFBQSxJQUNOLElBQUk7QUFBQSxNQUNGLHNCQUFzQjtBQUFBLElBQ3hCLENBQUM7QUFBQSxFQUNIO0FBQUEsRUFDQSxPQUFPO0FBQUEsSUFDTCxXQUFXO0FBQUEsRUFDYjtBQUFBLEVBQ0EsUUFBUTtBQUFBLElBQ04saUJBQWlCLEtBQUssVUFBVSxJQUFJLE9BQU8sSUFBSSxLQUFLLElBQUksVUFBVSxHQUFHLENBQUMsQ0FBQyxFQUFFO0FBQUEsRUFDM0U7QUFBQSxFQUNBLFNBQVM7QUFBQSxJQUNQLE9BQU87QUFBQSxNQUNMLFNBQVM7QUFBQSxNQUNULE1BQU07QUFBQSxJQUNSO0FBQUEsRUFDRjtBQUNGLENBQUM7IiwKICAibmFtZXMiOiBbXQp9Cg==
